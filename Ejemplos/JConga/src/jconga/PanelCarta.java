/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package jconga;
import baraja.Carta;
import java.awt.Image;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author luiss
 */
public class PanelCarta extends javax.swing.JPanel {
    
    private Carta carta = new Carta(0);
    public boolean seleccionada = false;
    private int enJuego = 0;

    
    /**
     * Creates new form PanelCarta
     */
    public PanelCarta() {
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        imgCarta = new javax.swing.JLabel();
        imgSeleccion = new javax.swing.JLabel();
        imgNumJuego = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(110, 166));
        setMinimumSize(new java.awt.Dimension(110, 166));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(110, 166));

        jLayeredPane1.setMaximumSize(new java.awt.Dimension(110, 166));
        jLayeredPane1.setMinimumSize(new java.awt.Dimension(110, 166));
        jLayeredPane1.setPreferredSize(new java.awt.Dimension(110, 166));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imgCarta.setBackground(new java.awt.Color(0, 0, 255));
        imgCarta.setMaximumSize(new java.awt.Dimension(104, 160));
        imgCarta.setMinimumSize(new java.awt.Dimension(104, 160));
        imgCarta.setPreferredSize(new java.awt.Dimension(104, 160));
        jLayeredPane1.add(imgCarta, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 3, -1, -1));

        imgSeleccion.setBackground(new java.awt.Color(255, 0, 51));
        imgSeleccion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        imgSeleccion.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        imgSeleccion.setMaximumSize(new java.awt.Dimension(25, 25));
        imgSeleccion.setMinimumSize(new java.awt.Dimension(25, 25));
        imgSeleccion.setPreferredSize(new java.awt.Dimension(25, 25));
        jLayeredPane1.setLayer(imgSeleccion, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(imgSeleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 0, -1, -1));

        imgNumJuego.setBackground(new java.awt.Color(153, 255, 255));
        imgNumJuego.setPreferredSize(new java.awt.Dimension(25, 25));
        jLayeredPane1.setLayer(imgNumJuego, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(imgNumJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 141, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Permite obtener la carta representada en este panel
     * @return La carta del panel
     */
    public Carta getCarta() {
        return carta;
    }
    
    /**
     * Permite establecer la carta que representa el panel.
     * @param carta Un objeto de tipo <i>Carta</i> 
     */
    public void setCarta(Carta carta) {
        this.carta = carta;
        ActualizarImagen();
    }
    
    /**
     * Fuerza renovar la imagen de la carta mostrada en el panel
     */
    public void ActualizarImagen(){
        String ruta = carta.rutaImagen();
        System.out.println("carta:"+ruta);
        try{
            Image img = ImageIO.read(getClass().getResource(ruta));
            //img = img.getScaledInstance(104, 160, Image.SCALE_AREA_AVERAGING);
            this.imgCarta.setIcon(new ImageIcon(img));
            //this.setIcon(new ImageIcon(img));
        }
        catch(IOException ex){
            System.out.println("ERROR ActualizarImagen: "+ex.getMessage());
        }
        
    }
    
    /**
     * Establece si la carta esta en u juego, o en cuál juego está
     * @param numJuego 
     */
    public void AgregarMarcaJuego(int numJuego){
        
        if (numJuego==1 || numJuego==2) {
            String rutaMarca = "imagen/marcaJuego"+numJuego+".png";
            
            try {
                Image iconoImg =  ImageIO.read(getClass().getResource(rutaMarca));
                //iconoImg = iconoImg.getScaledInstance(20, 20, Image.SCALE_SMOOTH);
                this.imgNumJuego.setIcon(new ImageIcon(iconoImg));
                
            } catch (IOException e) {
            }
            
        } else {
            System.err.println("ERROR AgregarMarcaJuego: Valor no válido, solo se admiten 1 y 2 para numJuego ");
        }

        
    }
    
    /**
     * Selecciona o deselecciona la carta, aplicando el ícono correspondiente
     */
    public void Seleccionar(){
        System.out.println(this.carta.getNumero()+this.carta.getPalo()+" clickeada");
        this.seleccionada = !this.seleccionada;
        MarcarSeleccion();
    }
    
    public void Seleccionar(boolean valor){
        this.seleccionada = valor;
        MarcarSeleccion();
    }
    
    /**
     * 
     */
    private void MarcarSeleccion(){
        ImageIcon icono = null;
        if(seleccionada){
            String rutaMarca = "imagen/seleccion.png";
            try {
                icono =  new ImageIcon(ImageIO.read(getClass().getResource(rutaMarca)));
                //iconoImg = iconoImg.getScaledInstance(20, 20, Image.SCALE_SMOOTH);
            } 
            catch (IOException e) {
                System.err.println("ERROR:"+e.getMessage());
            }
        }
        this.imgSeleccion.setIcon(icono);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imgCarta;
    private javax.swing.JLabel imgNumJuego;
    private javax.swing.JLabel imgSeleccion;
    private javax.swing.JLayeredPane jLayeredPane1;
    // End of variables declaration//GEN-END:variables


}
